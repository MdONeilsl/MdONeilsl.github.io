{
  "name": "types",
  "id": "types",
  "description": "Overview of LSL data types, which define the format of data in variables and function parameters, enforcing strong typing",
  "details": {
    "purpose": "To guide AI in understanding and using LSLâ€™s strongly typed data types, ensuring correct declarations and avoiding type-related errors",
    "type_mechanics": {
      "description": "LSL is a strongly typed language with seven data types for variables: integer (32-bit whole numbers), float (floating-point numbers), string (text), key (UUIDs for assets), vector (3D coordinates or colors), quaternion (quaternions for orientation), and list (heterogeneous collections). The type 'rotation' is a synonym for 'quaternion', both representing the same <x, y, z, s> data structure, but 'quaternion' is preferred for clarity. Functions without an explicit return type are implicitly void, meaning they return no value (e.g., do_stuff() { llSay(0, \"Hey!\"); }). All types are immutable, meaning variables can only be overwritten, not modified indirectly. Parameters are passed by value, creating copies, though the VM optimizes with references unless modified. Type declarations are required for variables and function parameters/returns, except for void functions",
      "recommendation": "Use specific types for intended data (e.g., vector for positions, quaternion for orientations) and verify type compatibility in expressions"
    },
    "all_types": [
      {
        "name": "integer",
        "description": "32-bit whole numbers (e.g., 0x00000000 to 0xFFFFFFFF), used for counts or indices"
      },
      {
        "name": "float",
        "description": "Floating-point numbers, used for decimals or precise calculations"
      },
      {
        "name": "string",
        "description": "Text sequences, used for messages or names"
      },
      {
        "name": "key",
        "description": "UUIDs (36-character hexadecimal strings with dashes), used to identify assets like objects or avatars"
      },
      {
        "name": "vector",
        "description": "Three float components (<x, y, z>), used for 3D positions or RGB colors (0 to 1 per component)"
      },
      {
        "name": "quaternion",
        "description": "Quaternions (<x, y, z, s>), used for object orientations, synonymous with 'rotation' but preferred for clarity"
      },
      {
        "name": "list",
        "description": "Heterogeneous collections of any type, comma-separated in square brackets, cannot be nested"
      },
      {
        "name": "rotation",
        "description": "Quaternions (<x, y, z, s>), used for object orientations, synonymous with 'quaternion'"
      }
    ],
    "best_practices": [
      "Declare variables and function parameters with explicit types to enforce strong typing",
      "Use appropriate types for data (e.g., vector for colors, quaternion for orientations)",
      "Prefer 'quaternion' over 'rotation' for orientation-related declarations to enhance code clarity",
      "Avoid invalid type operations (e.g., adding a string and a vector)",
      "Omit return type for void functions (e.g., do_stuff() instead of integer do_stuff())",
      "Check type compatibility for function parameters, as detailed in lsl_type_keywords.json",
      "Use lists for mixed-type data but avoid excessive length to conserve memory"
    ],
    "examples": [
      {
        "description": "Variable declarations with different types",
        "code": "integer count = 10;\nfloat pi = 3.14159;\nstring message = \"Hello\";\nkey owner;\nvector position = <1.0, 2.0, 3.0>;\nquaternion rot = <0.0, 0.0, 0.0, 1.0>;\nlist data = [1, \"two\", 3.0];",
        "context": "Shows declarations for seven variable types, using 'quaternion' for orientation"
      },
      {
        "description": "Function with void return type and typed parameters",
        "code": "say_hello(string name)\n{\n    llSay(0, \"Hello, \" + name);\n}",
        "context": "Demonstrates a void function (no return type) with a string parameter"
      }
    ],
    "references": [
      {
        "url": "https://wiki.secondlife.com/wiki/Category:LSL_Types",
        "title": "LSL Wiki: LSL Types Category"
      },
      {
        "url": "https://wiki.secondlife.com/wiki/LSL_Portal",
        "title": "LSL Wiki: LSL Portal"
      }
    ]
  }
}

