{
  "name": "constants",
  "id": "constants",
  "description": "Overview of LSL pre-defined constants, which provide fixed values for consistent script behavior",
  "details": {
    "purpose": "To guide AI in using LSLâ€™s pre-defined constants in scripts, ensuring consistent values for logic, calculations, and function parameters",
    "constant_mechanics": {
      "description": "LSL pre-defined constants are reserved, case-sensitive identifiers with fixed values, used in calculations, conditions, and function parameters. They cannot be redefined or used as variable names. Constants include boolean values (TRUE = 1, FALSE = 0), mathematical values (e.g., PI = 3.141592653589793), UUIDs (e.g., NULL_KEY = '00000000-0000-0000-0000-000000000000'), and domain-specific values (e.g., PERMISSION_TRIGGER_ANIMATION, STATUS_OK). Constants are categorized by type or purpose, such as permissions, status codes, or physics flags. The full list is extensive and available in the LSL Wiki; a subset is provided here for common use cases",
      "recommendation": "Use constants instead of literal values for clarity and maintainability, and consult the LSL Wiki for domain-specific constants"
    },
    "all_constants": [
      {
        "name": "TRUE",
        "description": "Boolean value representing 1, used in conditions and function parameters"
      },
      {
        "name": "FALSE",
        "description": "Boolean value representing 0, used in conditions and function parameters"
      },
      {
        "name": "PI",
        "description": "Mathematical constant 3.141592653589793, used for angular calculations"
      },
      {
        "name": "NULL_KEY",
        "description": "UUID '00000000-0000-0000-0000-000000000000', used to represent an invalid or null key"
      },
      {
        "name": "PERMISSION_TRIGGER_ANIMATION",
        "description": "Permission flag (0x04) for triggering animations on avatars"
      }
    ],
    "best_practices": [
      "Use constants like TRUE and FALSE instead of 1 and 0 for boolean logic",
      "Prefer PI over literal 3.14159 for mathematical clarity",
      "Use NULL_KEY for invalid key checks instead of the literal UUID string",
      "Check function-specific constants in the LSL Wiki for correct usage (e.g., permissions, status codes)",
      "Avoid hardcoding values that have corresponding constants to ensure maintainability",
      "Ensure constant names are spelled correctly due to case sensitivity"
    ],
    "examples": [
      {
        "description": "Using TRUE in a timer",
        "code": "default\n{\n    state_entry()\n    {\n        llSetTimer(10.0, TRUE);\n        llSay(0, \"Timer started\");\n    }\n}",
        "context": "Uses TRUE to enable a repeating timer with llSetTimer"
      },
      {
        "description": "Checking NULL_KEY in a key comparison",
        "code": "default\n{\n    touch_start(integer num_detected)\n    {\n        key toucher = llDetectedKey(0);\n        if (toucher != NULL_KEY)\n        {\n            llSay(0, \"Touched by \" + llKey2Name(toucher));\n        }\n        else\n        {\n            llSay(0, \"Invalid toucher key\");\n        }\n    }\n}",
        "context": "Uses NULL_KEY to validate a detected key"
      }
    ],
    "references": [
      {
        "url": "https://wiki.secondlife.com/wiki/Category:LSL_Constants",
        "title": "LSL Wiki: LSL Constants Category"
      },
      {
        "url": "https://wiki.secondlife.com/wiki/LSL_Portal",
        "title": "LSL Wiki: LSL Portal"
      }
    ]
  }
}

